// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Chat {

  /// <summary>Holder for reflection information generated from message.proto</summary>
  public static partial class MessageReflection {

    #region Descriptor
    /// <summary>File descriptor for message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1tZXNzYWdlLnByb3RvEgRDaGF0IlEKEkNvbnRyb2xJbmZvX0NfVE9fUxIJ",
            "CgFXGAEgASgIEgkKAVMYAiABKAgSCQoBQRgDIAEoCBIJCgFEGAQgASgIEg8K",
            "B2ZyYW1lSUQYBSABKAUiSwoLQ29udHJvbEluZm8SCQoBVxgBIAEoCBIJCgFT",
            "GAIgASgIEgkKAUEYAyABKAgSCQoBRBgEIAEoCBIQCghwbGF5ZXJJRBgFIAEo",
            "BSJUChFVcGRhdGVJbmZvX1NfVE9fQxIPCgdmcmFtZUlEGAEgASgFEi4KDGNv",
            "bnRyb2xJbmZvcxgCIAMoCzIYLkNoYXQuQ29udHJvbEluZm9fQ19UT19TIiYK",
            "ElNldE5pY2tOYW1lX0NfVE9fUxIQCghuaWNrbmFtZRgBIAEoCSIaChhOaWNr",
            "TmFtZV9CZWVuX1NldF9TX1RPX0MiEAoOV2VsY29tZV9TX1RPX0MqfQoEVFlQ",
            "RRIWChJjb250cm9sSW5mb19DX1RPX1MQABIVChF1cGRhdGVJbmZvX1NfVE9f",
            "QxABEhYKEnNldE5pY2tOYW1lX0NfVE9fUxACEhoKFm5pY2tOYW1lQmVlblNl",
            "dF9TX1RPX0MQAxISCg53ZWxjb21lX1NfVE9fQxAEYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Chat.TYPE), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.ControlInfo_C_TO_S), global::Chat.ControlInfo_C_TO_S.Parser, new[]{ "W", "S", "A", "D", "FrameID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.ControlInfo), global::Chat.ControlInfo.Parser, new[]{ "W", "S", "A", "D", "PlayerID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.UpdateInfo_S_TO_C), global::Chat.UpdateInfo_S_TO_C.Parser, new[]{ "FrameID", "ControlInfos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.SetNickName_C_TO_S), global::Chat.SetNickName_C_TO_S.Parser, new[]{ "Nickname" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.NickName_Been_Set_S_TO_C), global::Chat.NickName_Been_Set_S_TO_C.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Chat.Welcome_S_TO_C), global::Chat.Welcome_S_TO_C.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TYPE {
    [pbr::OriginalName("controlInfo_C_TO_S")] ControlInfoCToS = 0,
    [pbr::OriginalName("updateInfo_S_TO_C")] UpdateInfoSToC = 1,
    [pbr::OriginalName("setNickName_C_TO_S")] SetNickNameCToS = 2,
    [pbr::OriginalName("nickNameBeenSet_S_TO_C")] NickNameBeenSetSToC = 3,
    [pbr::OriginalName("welcome_S_TO_C")] WelcomeSToC = 4,
  }

  #endregion

  #region Messages
  public sealed partial class ControlInfo_C_TO_S : pb::IMessage<ControlInfo_C_TO_S> {
    private static readonly pb::MessageParser<ControlInfo_C_TO_S> _parser = new pb::MessageParser<ControlInfo_C_TO_S>(() => new ControlInfo_C_TO_S());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ControlInfo_C_TO_S> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.MessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlInfo_C_TO_S() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlInfo_C_TO_S(ControlInfo_C_TO_S other) : this() {
      w_ = other.w_;
      s_ = other.s_;
      a_ = other.a_;
      d_ = other.d_;
      frameID_ = other.frameID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlInfo_C_TO_S Clone() {
      return new ControlInfo_C_TO_S(this);
    }

    /// <summary>Field number for the "W" field.</summary>
    public const int WFieldNumber = 1;
    private bool w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "S" field.</summary>
    public const int SFieldNumber = 2;
    private bool s_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool S {
      get { return s_; }
      set {
        s_ = value;
      }
    }

    /// <summary>Field number for the "A" field.</summary>
    public const int AFieldNumber = 3;
    private bool a_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    /// <summary>Field number for the "D" field.</summary>
    public const int DFieldNumber = 4;
    private bool d_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool D {
      get { return d_; }
      set {
        d_ = value;
      }
    }

    /// <summary>Field number for the "frameID" field.</summary>
    public const int FrameIDFieldNumber = 5;
    private int frameID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrameID {
      get { return frameID_; }
      set {
        frameID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ControlInfo_C_TO_S);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ControlInfo_C_TO_S other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (W != other.W) return false;
      if (S != other.S) return false;
      if (A != other.A) return false;
      if (D != other.D) return false;
      if (FrameID != other.FrameID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (W != false) hash ^= W.GetHashCode();
      if (S != false) hash ^= S.GetHashCode();
      if (A != false) hash ^= A.GetHashCode();
      if (D != false) hash ^= D.GetHashCode();
      if (FrameID != 0) hash ^= FrameID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (W != false) {
        output.WriteRawTag(8);
        output.WriteBool(W);
      }
      if (S != false) {
        output.WriteRawTag(16);
        output.WriteBool(S);
      }
      if (A != false) {
        output.WriteRawTag(24);
        output.WriteBool(A);
      }
      if (D != false) {
        output.WriteRawTag(32);
        output.WriteBool(D);
      }
      if (FrameID != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(FrameID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (W != false) {
        size += 1 + 1;
      }
      if (S != false) {
        size += 1 + 1;
      }
      if (A != false) {
        size += 1 + 1;
      }
      if (D != false) {
        size += 1 + 1;
      }
      if (FrameID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ControlInfo_C_TO_S other) {
      if (other == null) {
        return;
      }
      if (other.W != false) {
        W = other.W;
      }
      if (other.S != false) {
        S = other.S;
      }
      if (other.A != false) {
        A = other.A;
      }
      if (other.D != false) {
        D = other.D;
      }
      if (other.FrameID != 0) {
        FrameID = other.FrameID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            W = input.ReadBool();
            break;
          }
          case 16: {
            S = input.ReadBool();
            break;
          }
          case 24: {
            A = input.ReadBool();
            break;
          }
          case 32: {
            D = input.ReadBool();
            break;
          }
          case 40: {
            FrameID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ControlInfo : pb::IMessage<ControlInfo> {
    private static readonly pb::MessageParser<ControlInfo> _parser = new pb::MessageParser<ControlInfo>(() => new ControlInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ControlInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.MessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlInfo(ControlInfo other) : this() {
      w_ = other.w_;
      s_ = other.s_;
      a_ = other.a_;
      d_ = other.d_;
      playerID_ = other.playerID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ControlInfo Clone() {
      return new ControlInfo(this);
    }

    /// <summary>Field number for the "W" field.</summary>
    public const int WFieldNumber = 1;
    private bool w_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool W {
      get { return w_; }
      set {
        w_ = value;
      }
    }

    /// <summary>Field number for the "S" field.</summary>
    public const int SFieldNumber = 2;
    private bool s_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool S {
      get { return s_; }
      set {
        s_ = value;
      }
    }

    /// <summary>Field number for the "A" field.</summary>
    public const int AFieldNumber = 3;
    private bool a_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    /// <summary>Field number for the "D" field.</summary>
    public const int DFieldNumber = 4;
    private bool d_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool D {
      get { return d_; }
      set {
        d_ = value;
      }
    }

    /// <summary>Field number for the "playerID" field.</summary>
    public const int PlayerIDFieldNumber = 5;
    private int playerID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerID {
      get { return playerID_; }
      set {
        playerID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ControlInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ControlInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (W != other.W) return false;
      if (S != other.S) return false;
      if (A != other.A) return false;
      if (D != other.D) return false;
      if (PlayerID != other.PlayerID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (W != false) hash ^= W.GetHashCode();
      if (S != false) hash ^= S.GetHashCode();
      if (A != false) hash ^= A.GetHashCode();
      if (D != false) hash ^= D.GetHashCode();
      if (PlayerID != 0) hash ^= PlayerID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (W != false) {
        output.WriteRawTag(8);
        output.WriteBool(W);
      }
      if (S != false) {
        output.WriteRawTag(16);
        output.WriteBool(S);
      }
      if (A != false) {
        output.WriteRawTag(24);
        output.WriteBool(A);
      }
      if (D != false) {
        output.WriteRawTag(32);
        output.WriteBool(D);
      }
      if (PlayerID != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PlayerID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (W != false) {
        size += 1 + 1;
      }
      if (S != false) {
        size += 1 + 1;
      }
      if (A != false) {
        size += 1 + 1;
      }
      if (D != false) {
        size += 1 + 1;
      }
      if (PlayerID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ControlInfo other) {
      if (other == null) {
        return;
      }
      if (other.W != false) {
        W = other.W;
      }
      if (other.S != false) {
        S = other.S;
      }
      if (other.A != false) {
        A = other.A;
      }
      if (other.D != false) {
        D = other.D;
      }
      if (other.PlayerID != 0) {
        PlayerID = other.PlayerID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            W = input.ReadBool();
            break;
          }
          case 16: {
            S = input.ReadBool();
            break;
          }
          case 24: {
            A = input.ReadBool();
            break;
          }
          case 32: {
            D = input.ReadBool();
            break;
          }
          case 40: {
            PlayerID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateInfo_S_TO_C : pb::IMessage<UpdateInfo_S_TO_C> {
    private static readonly pb::MessageParser<UpdateInfo_S_TO_C> _parser = new pb::MessageParser<UpdateInfo_S_TO_C>(() => new UpdateInfo_S_TO_C());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateInfo_S_TO_C> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.MessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo_S_TO_C() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo_S_TO_C(UpdateInfo_S_TO_C other) : this() {
      frameID_ = other.frameID_;
      controlInfos_ = other.controlInfos_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateInfo_S_TO_C Clone() {
      return new UpdateInfo_S_TO_C(this);
    }

    /// <summary>Field number for the "frameID" field.</summary>
    public const int FrameIDFieldNumber = 1;
    private int frameID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FrameID {
      get { return frameID_; }
      set {
        frameID_ = value;
      }
    }

    /// <summary>Field number for the "controlInfos" field.</summary>
    public const int ControlInfosFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Chat.ControlInfo_C_TO_S> _repeated_controlInfos_codec
        = pb::FieldCodec.ForMessage(18, global::Chat.ControlInfo_C_TO_S.Parser);
    private readonly pbc::RepeatedField<global::Chat.ControlInfo_C_TO_S> controlInfos_ = new pbc::RepeatedField<global::Chat.ControlInfo_C_TO_S>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Chat.ControlInfo_C_TO_S> ControlInfos {
      get { return controlInfos_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateInfo_S_TO_C);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateInfo_S_TO_C other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FrameID != other.FrameID) return false;
      if(!controlInfos_.Equals(other.controlInfos_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FrameID != 0) hash ^= FrameID.GetHashCode();
      hash ^= controlInfos_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FrameID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(FrameID);
      }
      controlInfos_.WriteTo(output, _repeated_controlInfos_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FrameID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FrameID);
      }
      size += controlInfos_.CalculateSize(_repeated_controlInfos_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateInfo_S_TO_C other) {
      if (other == null) {
        return;
      }
      if (other.FrameID != 0) {
        FrameID = other.FrameID;
      }
      controlInfos_.Add(other.controlInfos_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FrameID = input.ReadInt32();
            break;
          }
          case 18: {
            controlInfos_.AddEntriesFrom(input, _repeated_controlInfos_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SetNickName_C_TO_S : pb::IMessage<SetNickName_C_TO_S> {
    private static readonly pb::MessageParser<SetNickName_C_TO_S> _parser = new pb::MessageParser<SetNickName_C_TO_S>(() => new SetNickName_C_TO_S());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetNickName_C_TO_S> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.MessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNickName_C_TO_S() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNickName_C_TO_S(SetNickName_C_TO_S other) : this() {
      nickname_ = other.nickname_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetNickName_C_TO_S Clone() {
      return new SetNickName_C_TO_S(this);
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 1;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetNickName_C_TO_S);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetNickName_C_TO_S other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Nickname != other.Nickname) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Nickname.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Nickname);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetNickName_C_TO_S other) {
      if (other == null) {
        return;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Nickname = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NickName_Been_Set_S_TO_C : pb::IMessage<NickName_Been_Set_S_TO_C> {
    private static readonly pb::MessageParser<NickName_Been_Set_S_TO_C> _parser = new pb::MessageParser<NickName_Been_Set_S_TO_C>(() => new NickName_Been_Set_S_TO_C());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NickName_Been_Set_S_TO_C> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.MessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NickName_Been_Set_S_TO_C() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NickName_Been_Set_S_TO_C(NickName_Been_Set_S_TO_C other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NickName_Been_Set_S_TO_C Clone() {
      return new NickName_Been_Set_S_TO_C(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NickName_Been_Set_S_TO_C);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NickName_Been_Set_S_TO_C other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NickName_Been_Set_S_TO_C other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Welcome_S_TO_C : pb::IMessage<Welcome_S_TO_C> {
    private static readonly pb::MessageParser<Welcome_S_TO_C> _parser = new pb::MessageParser<Welcome_S_TO_C>(() => new Welcome_S_TO_C());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Welcome_S_TO_C> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Chat.MessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Welcome_S_TO_C() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Welcome_S_TO_C(Welcome_S_TO_C other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Welcome_S_TO_C Clone() {
      return new Welcome_S_TO_C(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Welcome_S_TO_C);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Welcome_S_TO_C other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Welcome_S_TO_C other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
